<script>
  $(document).ready(function () {
    console.log('ONLOAD settings');
    if (remote.getGlobal('currentConfiguration').autoMount) {
      $('#autoMount').prop('checked', true);
    }
    $('#autoMount').on('change.bootstrapSwitch', (e) => {
      ipcRenderer.send('change_config', {key: 'autoMount', val: e.target.checked});
    });
    if (remote.getGlobal('currentConfiguration').allowOtherDevices) {
      $('#allowOtherDevices').prop('checked', true);
    }
    $('#allowOtherDevices').on('change.bootstrapSwitch', (e) => {
      ipcRenderer.send('change_config', {key: 'allowOtherDevices', val: e.target.checked});
    });

    $('#cfgSection').val(remote.getGlobal('currentConfiguration').cfgSection);
    $('#cfgSection').on('change', (e) => {
      ipcRenderer.send('change_config', {key: 'cfgSection', val: e.target.value});
    });


    $('#debugTool').on('click', (e) => {
      remote.getGlobal('win').webContents.openDevTools();
    });

    async function setRclone() {
      const file = await dialog.showOpenDialog(null, {
        title: 'RClone custom path',
        message: 'Browse to rclone',
        properties: ['openFile'],
        filters: [{
          name: 'Exe', extensions: ['exe'],
          name: 'All', extensions: ['*'],
        }],
      });
      if (file.canceled) return;
      const rclonePath = file.filePaths[0];
      $('#rclonePath').val(rclonePath);
      ipcRenderer.send('change_config', {key: 'rclonePath', val: rclonePath});
      return rclonePath;
    }

    $('#rclonePath').val(remote.getGlobal('currentConfiguration').rclonePath);
    $('#rclonePath').on('change', (e) => {
      ipcRenderer.send('change_config', {key: 'rclonePath', val: e.target.value});
    });
    $('#rclonePathBtn').on('click', (e) => setRclone());

    async function setSCRCPY() {
      const file = await dialog.showOpenDialog(null, {
        title: 'SCRCPY custom path',
        message: 'Browse to scrcpy',
        properties: ['openFile'],
        filters: [{
          name: 'Exe', extensions: ['exe'],
          name: 'All', extensions: ['*'],
        }],
      });
      if (file.canceled) return;
      const scrcpyPath = file.filePaths[0];
      $('#scrcpyPath').val(scrcpyPath);
      ipcRenderer.send('change_config', {key: 'scrcpyPath', val: scrcpyPath});
      return rclonePath;
    }

    $('#scrcpyPath').val(remote.getGlobal('currentConfiguration').scrcpyPath);
    $('#scrcpyPath').on('change', (e) => {
      ipcRenderer.send('change_config', {key: 'scrcpyPath', val: e.target.value});
    });
    $('#scrcpyPathBtn').on('click', (e) => setSCRCPY());

    // setRclone();
  });
</script>

<div class="card text-white bg-primary">
  <div class="card-header">
    <h2 class="">Settings</h2>
  </div>
  <div class="card-body">
    <div class="card-text container">
      <div class="form-group mb-3">
        <label for="cfgMirror">Select rclone mirror(click on mount status button to remount):</label>
        <select class="custom-select" id="cfgSection">
          <option value="VRP-mirror02">VRP-mirror02</option>
          <option value="VRP-mirror03">VRP-mirror03</option>
          <option value="VRP-mirror06">VRP-mirror06</option>
          <option value="VRP-mirror09">VRP-mirror09</option>
          <option value="VRP-mirror10">VRP-mirror10</option>
          <option value="VRP-mirror12">VRP-mirror12</option>
          <option value="VRP-mirror13">VRP-mirror13</option>
          <option value="VRP-mirror16">VRP-mirror16</option>
        </select>
      </div>

      <div class="form-group mb-4">
        <label for="rclonePath"><a onclick="shell.openExternal('https://downloads.rclone.org/')">RClone</a> custom path:</label>
        <div class="input-group">
          <input id="rclonePath" class="form-control" value="" />
          <a class="btn btn-primary" id="rclonePathBtn">Browse</a>
        </div>
      </div>
      <div class="form-group mb-4">
        <label for="scrcpyPath"><a onclick="shell.openExternal('https://github.com/Genymobile/scrcpy/releases/latest')">SCRCPY</a> custom path:</label>
        <div class="input-group">
          <input id="scrcpyPath" class="form-control" value="" />
          <a class="btn btn-primary" id="scrcpyPathBtn">Browse</a>
        </div>
      </div>
      <div class="form-check mb-3">
        <label for="autoMount" class="form-check-label">
          <input class="form-check-input" type="checkbox" id="autoMount">
          Automatically mount drive on startup (if not already mounted)
        </label>
      </div>
      <div class="form-check mb-3">
        <label for="allowOtherDevices" class="form-check-label">
          <input class="form-check-input" type="checkbox" id="allowOtherDevices">
          Allow to connect not oculus devices
        </label>
      </div>

      <div class="form-group">
        <a id="debugTool" class="btn btn-primary">
          <i class="fa fa-bug" aria-hidden="true"></i> Open debug tools
        </a>
      </div>
    </div>
  </div>
</div>

