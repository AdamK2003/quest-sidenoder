<div class="card text-light bg-primary">
  <div class="card-header">
    <h2 class="mb-0"><i class="fa fa-cog"></i> Settings</h2>
  </div>
  <div class="card-body">
    <div class="card-text container">
      <div class="card bg-primary mb-1">
        <div class="card-header">Rclone configs(needed for mount remoute disck`s):</div>
        <div class="card-body">
          <div class="form-group mb-3">
            <label for="cfgSection">Select mirror(click on mount status button to remount):</label>
            <select class="custom-select" id="cfgSection">
            </select>
          </div>

          <div class="form-group mb-4">
            <label for="rclonePath">Custom binary path:</label>
            <div class="input-group">
              <input id="rclonePath" class="form-control" value="" />
              <a class="btn btn-primary" id="rclonePathBtn">Browse</a>
              <a class="btn btn-info" onclick="shell.openExternal('https://downloads.rclone.org/')">Download</a>
            </div>
          </div>
          <div class="form-group mb-4">
            <label for="rcloneConf">Path config:</label>
            <div class="input-group">
              <input id="rcloneConf" class="form-control" value="" />
              <a class="btn btn-primary" id="rcloneConfBtn">Browse</a>
            </div>
          </div>

          <div class="form-check mb-3">
            <label for="autoMount" class="form-check-label">
              <input class="form-check-input" type="checkbox" id="autoMount">
              Automatically mount drive on startup (if not already mounted)
            </label>
          </div>
        </div>
      </div>


      <div class="card bg-primary mb-1">
        <div class="card-header">Main:</div>
        <div class="card-body">
          <div class="form-group mb-4">
            <label for="scrcpyPath"><a onclick="shell.openExternal('https://github.com/Genymobile/scrcpy/releases/latest')">SCRCPY</a> custom path:</label>
            <div class="input-group">
              <input id="scrcpyPath" class="form-control" value="" />
              <a class="btn btn-primary" id="scrcpyPathBtn">Browse</a>
                  <a class="btn btn-info" onclick="shell.openExternal('https://github.com/Genymobile/scrcpy/releases/latest')">Download</a>
            </div>
          </div>
          <div class="form-check mb-3">
            <label for="allowOtherDevices" class="form-check-label">
              <input class="form-check-input" type="checkbox" id="allowOtherDevices">
              Allow to connect not oculus devices
            </label>
          </div>
          <div class="form-check mb-3">
            <label for="cacheOculusGames" class="form-check-label">
              <input class="form-check-input" type="checkbox" id="cacheOculusGames">
              Cache Oculus Games on first opening(for faster reopening)
            </label>
          </div>

          <!-- <div class="form-group">
            <a id="debugTool" class="btn btn-primary">
              <i class="fa fa-bug"></i> Open debug tools
            </a>
          </div> -->
        </div>
      </div>
    </div>
  </div>
</div>

<script>{
  console.log('ONLOAD settings');
  const OPT_KEYS = [
    'cfgSection',
    'rclonePath',
    'rcloneConf',
    'scrcpyPath',
  ];
  const CHKBOXES = [
    'autoMount',
    'allowOtherDevices',
    'cacheOculusGames',
  ];

  for (const section of remote.getGlobal('rcloneSections')) {
    $('#cfgSection').append(`<option value="${section}">${section}</option`);
  }

  for (const key of OPT_KEYS) {
    $('#' + key)
      .val(remote.getGlobal('currentConfiguration')[key])
      .on('change', (e) => {
        ipcRenderer.send('change_config', {key, val: e.target.value});
      });
  }

  for (const key of CHKBOXES) {
    const el = $('#' + key);
    if (remote.getGlobal('currentConfiguration')[key]) {
      el.prop('checked', true);
    }

    el.on('change.bootstrapSwitch', (e) => {
      ipcRenderer.send('change_config', {key, val: e.target.checked});
    });
  }


  $('#debugTool').on('click', (e) => {
    remote.getGlobal('win').webContents.openDevTools();
  });

  $('#rclonePathBtn').on('click', (e) => setRclone());
  async function setRclone() {
    const file = await dialog.showOpenDialog(null, {
      title: 'RClone custom path',
      message: 'Browse to rclone',
      properties: ['openFile'],
      filters: [{
        name: 'Exe', extensions: ['exe'],
        name: 'All', extensions: ['*'],
      }],
    });
    if (file.canceled) return;
    const rclonePath = file.filePaths[0];
    $('#rclonePath').val(rclonePath);
    ipcRenderer.send('change_config', {key: 'rclonePath', val: rclonePath});
    return rclonePath;
  }

  $('#rcloneConfBtn').on('click', (e) => setRcloneConf());
  async function setRcloneConf() {
    const file = await dialog.showOpenDialog(null, {
      title: 'RClone config location',
      message: 'Browse to rclone config',
      properties: ['openFile'],
      filters: [{
        name: 'Config', extensions: ['conf', 'cfg', 'ini'],
        name: 'All', extensions: ['*'],
      }],
    });
    if (file.canceled) return;

    const rcloneConf = file.filePaths[0];
    $('#rcloneConf').val(rcloneConf);
    ipcRenderer.send('change_config', {key: 'rcloneConf', val: rcloneConf});
    return rcloneConf;
  }

  $('#scrcpyPathBtn').on('click', (e) => setSCRCPY());
  async function setSCRCPY() {
    const file = await dialog.showOpenDialog(null, {
      title: 'SCRCPY custom path',
      message: 'Browse to scrcpy',
      properties: ['openFile'],
      filters: [{
        name: 'Exe', extensions: ['exe'],
        name: 'All', extensions: ['*'],
      }],
    });
    if (file.canceled) return;

    const scrcpyPath = file.filePaths[0];
    $('#scrcpyPath').val(scrcpyPath);
    ipcRenderer.send('change_config', {key: 'scrcpyPath', val: scrcpyPath});
    return rclonePath;
  }

}</script>