<!doctype html>
<html lang="en">
<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">


  <script>window.$ = window.jQuery = require('jquery');</script>

  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js" integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s" crossorigin="anonymous"></script>



  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="https://bootswatch.com/4/sandstone/bootstrap.min.css">

  <title>Quest-Sideloader-Linux</title>


  <style>
    a { cursor: pointer; }
  </style>

  <script>
    const electron = window.require('electron');
    const { ipcRenderer } = electron;
    const remote = electron.remote;
    const { dialog } = remote;

    function loadInclude(template, id = null) {
      if (!id) {
        $('#mainbody').html('');
        $('#mainbody').load(template);
      }
      else {
        $(`#${id}`).load(template);
      }
    }
  </script>

  <script src="browse.js"></script>
  <script src="installed.js"></script>

  <script>

    $(function() {
      loadInclude('sideloadmodal.twig', 'sideloadmodaldiv');
      loadInclude('confirmmodal.twig', 'confirmmodaldiv');

      document.ondragover = document.ondrop = (ev) => {
        ev.preventDefault()
      }

      document.body.ondrop = (ev) => {
        if (ev.dataTransfer.files[0].path.endsWith(".apk")) {
          ipcRenderer.send('filedrop', ev.dataTransfer.files[0].path.replace(/\\/g,"/"));
        }
        ev.preventDefault()
      }
    });

    ipcRenderer.on('get_storage', (event, arg) => {
      console.log("get_storage ! ");
      console.log(arg)
      if (arg.success) {
        $('#storageDiv').html(`
<span class="pull-left push-left">Size: ${arg.storage[0]}</span>
<span class="pull-right push-right">Available: ${arg.storage[2]}</span>
<center>Used: ${arg.storage[1]}(${arg.storage[3]})</center>
              <div class="progress">
  <div class="progress-bar progress-bar-striped bg-info" role="progressbar" style="width: ${arg.storage[3]}" aria-valuenow="${arg.storage[3].replace('%', '')}" aria-valuemin="0" aria-valuemax="100"></div>
</div>
<br>
          `)
      }
    });

    ipcRenderer.on('notify_update', (event, arg) => {
      console.log("notify_update msg came ! ");
      dialog.showMessageBox(null, {
        type: 'info',
        buttons: ['Understood'],
        title: 'Update available',
        message: `sidenoder-${arg.remote} is now available on github.`,
        detail: 'Please visit https://github.com/vKolerts/quest-sidenoder/releases',
      })
    });

    ipcRenderer.on('ask_sideload', (event, arg) => {
      console.log('ask_sideload msg came ! ');
      const { success, path, update } = JSON.parse(arg);
      if (!success) return;

      const lastslashindex = path.lastIndexOf('/');
      const file= path.substring(lastslashindex  + 1);

      $('#confirmSideloadButton').data('path', path);
      $('#confirmSideloadButton').data('update', !!update);
      $('#confirmModal').modal('show');
      $('#confirmModal > div > div > div.modal-body').html('Do you want to sideload: <br><b>' + file + '</b>');
    });


    ipcRenderer.on('start_sideload', (event, arg) => {
      console.log('start_sideload msg came ! ');
      console.log(arg);
      const { success, path } = JSON.parse(arg);
      if (!success) return;

      const lastslashindex = path.lastIndexOf('/');
      const file= path.substring(lastslashindex  + 1)

      $('#sideloadModal').modal('show');
      $("#sideloadModal > div > div > div.modal-body > #sideloadText").html("Processing: <br><b>"+file+"</b>")
    });





    ipcRenderer.on('sideload_aapt_done', (event, arg) => {
      $('.aaptDoneBadge').removeClass('badge-warning').addClass('badge-success');
      ipcRenderer.send('get_storage', '');
    });
    ipcRenderer.on('sideload_check_done', (event, arg) => {
      $('.checkDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_backup_done', (event, arg) => {
      $('.backupDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_uninstall_done', (event, arg) => {
      $('.uninstallDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_restore_done', (event, arg) => {
      $('.restoreDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_download_done', (event, arg) => {
      $('.downloadDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_apk_done', (event, arg) => {
      $('.apkDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_copy_obb_done', (event, arg) => {
      $('.copyObbDoneBadge').removeClass('badge-warning').addClass('badge-success');
      $('.downloadObbDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_move_obb_done', (event, arg) => {
      $('.moveObbDoneBadge').removeClass('badge-warning').addClass('badge-success');
    });
    ipcRenderer.on('sideload_done', (event, arg) => {
      console.log('sideload done received')
      console.log(arg);
      if (JSON.parse(arg).success) {
        $('.sideloadDoneBadge').removeClass('badge-warning').addClass('badge-success');
        $('#sideloadDoneBtn').removeClass('disabled').removeClass('btn-primary').addClass('btn-success').html('Done')
        $('#sideloadRefresh').removeClass('fa-refresh').removeClass('fa-spin').addClass('fa-check-circle-o')
      }
      if (JSON.parse(arg).update === true) {
        getUpdates();
      }
    });

    function checkMount() {
      $('#mountrefresh').addClass('fa-spin');
      $('#mountbtn').removeClass('btn-danger');
      $('#mountbtn').addClass('btn-warning');
      ipcRenderer.send('mount', 'bla');
    }

    ipcRenderer.on('log', (event, arg) => {
      console.log("log came")
      console.log(arg)
    });

    // edit btn on browse page
    ipcRenderer.on('check_mount', (event, arg) => {
      if (JSON.parse(arg).success) {
        $('#browseheader').html(`<span id="mountBadge" class="badge badge-warning badge-md"><a data-path="${JSON.parse(arg).mountFolder}" onclick="getDir(this)"><i id="mountrefresh" class="fa fa-check-circle-o"></i> Click to browse mount</a></span>`)
        $('#mountBadge').removeClass('badge-warning');
        $('#mountBadge').addClass('badge-success');
      }
    });

    // edit btn on installed apps page
    ipcRenderer.on('check_mount', (event, arg) => {
      if (JSON.parse(arg).success) {
        $('#updateBadge').removeClass('badge-danger');
        $('#updateBadge').addClass('badge-success');
        $('#updateBadge').html(`<a onclick="getUpdates(this)">Click to check mount for updates [BETA]</a>`)
      }
    });

    //edit btn on top
    ipcRenderer.on('check_mount', (event, arg) => {
      console.log("check_mount responded: "+arg); // prints "ping"
      console.log(JSON.parse(arg));
      if (JSON.parse(arg).success) {
        $("#mountrefresh").removeClass('fa-spin');
        $("#mountbtn").removeClass('btn-warning');
        $("#mountbtn").removeClass('btn-danger');
        $("#mountbtn").addClass('btn-success');
        $("#mountbtn").html(`<i  id="mountrefresh" class="fa fa-check-circle-o"></i> | Mount status:</br>Connected.`)
        $("#mountbtn").onclick = function() {return false;}
      }
      else {
        $("#mountrefresh").removeClass('fa-spin');
        $("#mountbtn").removeClass('btn-success');
        $("#mountbtn").addClass('btn-danger');
      }
    });




    function checkDevice() {
      $("#devicerefresh").addClass('fa-spin');
      $("#devicebtn").removeClass('btn-danger');
      $("#devicebtn").addClass('btn-warning');
      ipcRenderer.send('get_device', 'bla');
    }

    ipcRenderer.on('get_device', (event, arg) => {
      console.log('get_device msg came FROM BE to fe:'); // prints "ping"
      console.log(arg);
      if (arg.success !== false) {
        console.log('GETDEVICE SUCESS')
        $("#devicebtn").removeClass('btn-danger');
        $("#devicebtn").addClass('btn-success');
        $("#devicebtn").html(`<i id="devicerefresh" class="fa fa-check-circle-o"></i> | Quest status:</br>Connected.`)

        $(".deviceBadge").removeClass('badge-warning');
        $(".deviceBadge").addClass('badge-success');

        $("#installedAppsNav").removeClass("disabled");
        $("#installedAppsNav").removeClass("btn-secondary");
        $("#installedAppsNav").addClass("btn-primary");
      }
      else {
        $("#devicebtn").removeClass('btn-success');
        $("#devicebtn").addClass('btn-danger');
        $("#devicebtn").html(`<i id="devicerefresh" class="fa fa-refresh fa-spin"></i> | Quest status:</br>Disconnected.`)

        //$("#installedAppsNav").addClass("disabled");
      }
    });



  </script>





  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js">// screenshot stuff</script>
  <script> // screenhot stuff
    async function makeScreenshot(selector = "body") {
      return new Promise((resolve, reject) => {
        let node = document.querySelector(selector);
        html2canvas(node, {
          onrendered: (canvas) => {
            let pngUrl = canvas.toDataURL();
            resolve(pngUrl);
          }, allowTaint: true
        });
      });
    }

    async function report() {
      const screenshot = await makeScreenshot(); // png dataUrl
      console.log(screenshot)
      var fs = require("fs");
      const base64Data = screenshot.replace(/^data:([A-Za-z-+/]+);base64,/, '');
      fs.writeFile("outt.png", base64Data, 'base64', (err) => {
        console.log(err);
      });
    }
  </script>



  {% block onload %}
    <script>
      $(document).ready(function() {


        // dialog.showMessageBox(null, {
        //   type: 'info',
        //   //buttons: ['Cancel', 'Yes, please', 'No, thanks'],
        //   //defaultId: 2,
        //   title: 'Update availablee',
        //   message: 'A',
        //   detail: 'It does not really matter',
        //   checkboxLabel: 'Remember my answer',
        //   checkboxChecked: true,
        // })




        console.log('ONLOAD');
        ipcRenderer.send('check_mount', 'bla');
        //checkMount()
        ipcRenderer.send('get_device', 'bla');

        console.log('setup ask device listener')
        ipcRenderer.on('ask_device', (event, arg) => {
          console.log('ask_device msg came ! ');
          dialog.showMessageBox(null, {
            type: 'info',
            buttons: ['Understood'],
            title: 'Missing device',
            message: `This action cannot be performed without a device attached.`,
          })
        });


        ipcRenderer.on('rclone_data', (event, arg) => {
          data=arg;
          // console.log('rclone_data received', data);
          if(data.transferring && data.transferring.length > 0) {
            $(".mountcopystatus").text(`${formatBytes(data.transferring[0].bytes)} of ${formatBytes(data.transferring[0].size)} (${data.transferring[0].percentage}%) - ${formatBytes(data.transferring[0].speedAvg)}/s (${formatEta(data.transferring[0].eta)})`);
          }
          else {
            $(".mountcopystatus").text('')
          }
        });

      });
    </script>
  {% endblock %}

</head>
<body>

<nav class="navbar navbar-expand-md navbar-light bg-light">

{#  <a class="navbar-brand" href="index.twig">Q-S-L</a>#}

  <img src="quest-sidenoder.svg" width="78" height="78" alt="" style="margin-right: 20px">

  <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
    <span class="navbar-toggler-icon"></span>
  </button>

  {% block navbar %}
  <div class="collapse navbar-collapse" id="navbarSupportedContent">
    <ul class="navbar-nav mr-auto">
      {#
      <li class="nav-item active">
        <a class="nav-link" href="/home">Home <span class="sr-only">(current)</span></a>
      </li>
      #}
      <li class="nav-item">
        <a class="btn btn-primary" style="margin-right: 20px"  onclick="loadInclude('browse_include.twig');">
          <i class="fa fa-folder-open-o" aria-hidden="true"></i>
            Browse
        </a>
      </li>
      <li class="nav-item">
        <a id="installedAppsNav" class="btn btn-secondary disabled" style="margin-right: 20px" onclick="loadInclude('installed_include.twig')">
          <i class="fa fa-list" aria-hidden="true"></i>
           Installed APP's
        </a>
      </li>
      <li class="nav-item">
        <a class="btn btn-primary" style="margin-right: 20px"  onclick="loadInclude('settings_include.twig')">
          <i class="fa fa-cog" aria-hidden="true"></i>
           Settings
        </a>
      </li>
      <li class="nav-item">
        <a class="btn btn-primary" data-toggle="collapse" href="#collapseExample" role="button" aria-expanded="false" aria-controls="collapseExample">
          <i class="fa fa-bug" aria-hidden="true"></i> REPORT AN ISSUE
        </a>
      </li>

    </ul>
    <form class="form-inline my-2 my-lg-0">

      <span type="button"  id="mountbtn" onclick="checkMount()" class="btn btn-lg btn-danger" disabled><i  id="mountrefresh" class="fa fa-refresh"></i> | Mount status:</br>Disconnected.</span>
  &nbsp;

        <span type="button" id="devicebtn" {# onclick="checkDevice()" #} class="btn btn-lg btn-danger"  disabled><i id="devicerefresh" class="fa fa-spin fa-refresh"></i> | Quest status:</br>Disconnected.</span>


      {# <button class="btn btn-outline-success my-2 my-sm-0" type="submit">Search</button> #}
    </form>

  </div>
  {% endblock %}
</nav>


<div style="padding: 20px">


  <p>

  </p>
  <div class="collapse" id="collapseExample">
    <div class="card card-body">
      If you encounter any issues or bugs, please report them at https://github.com/vKolerts/quest-sidenoder/issues
    </div>
    <br>
  </div>



{% block body %}{% endblock %}
  <hr>
  <center>
    <b>sidenoder v{{ version }}</b>
    <br>
    This fork https://github.com/vKolerts/quest-sidenoder
    <br>
    Main repository https://github.com/whitewhidow/quest-sidenoder
  </center>
</div>


<div id="sideloadmodaldiv">
</div>

<div id="confirmmodaldiv">
</div>





<!--
 Optional JavaScript -->
<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script>


  function formatEta(seconds) {
    if (seconds == null) { return 'Starting...'; }
    hours = Math.floor(seconds / 3600);
    seconds -= hours * 3600;
    minutes = Math.floor(seconds / 60);
    seconds -= minutes * 60;
    if (hours > 0) {
      return hours + 'h ' + minutes + 'm ' + seconds + 's';
    }
    else if (minutes > 0) {
      return minutes + 'm ' + seconds + 's';
    }
    else {
      return seconds + 's';
    }
  }

  function formatBytes(bytes) {
    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];
    if (bytes == 0) return '0 B';

    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
  }

</script>
</body>
</html>

